---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-storage
  namespace: rotten-potatoes
  labels:
    type: local
spec:
  storageClassName: gp3
  capacity:
    storage: 2G
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: '/mnt/data'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-storage-claim
  namespace: rotten-potatoes
spec:
  storageClassName: gp3
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2G
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: rotten-potatoes
type: Opaque
data:
  POSTGRES_USER: YmFja3N0YWdl
  POSTGRES_PASSWORD: aHVudGVyMg==
  POSTGRES_DB: cm90dGVu
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: rotten-potatoes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13.2-alpine
          imagePullPolicy: 'IfNotPresent'
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secrets
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-storage-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: rotten-potatoes
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
# ---
# apiVersion: cilium.io/v2
# kind: CiliumNetworkPolicy
# metadata:
#   name: allow-back-to-db
#   namespace: rotten-potatoes
# spec:
#   endpointSelector:
#     matchLabels:
#       app: postgres
#   ingress:
#   - fromEndpoints:
#     - matchLabels:
#         app: rotten-potatoes-api
#   - toPorts:
#     - ports:
#       - port: "5432"
#         protocol: TCP